{"ast":null,"code":"var _jsxFileName = \"/Users/nklsstlr/work/github/codenames/client/src/components/OnlinePlayersHooks/OnlinePlayersHooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SimpleUserTable from \"../OnlinePlayersHoC/SimpleOnlinePlayerList\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst OnlinePlayersHooks = () => {\n  const [data, setData] = useState({\n    users: [],\n    isFetching: false\n  });\n  socket = io(\"http://localhost:3002\");\n  socket.emit(\"join\", \"Niklas\", error => {\n    if (error) {\n      alert(error);\n    }\n  });\n  useEffect(() => {\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      console.log(\"socketio: \" + users);\n      setData(users);\n    });\n  }, []);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setData({\n          users: data.users,\n          isFetching: true\n        });\n        const result = await callAPI();\n        console.log(result);\n        setData({\n          users: result.response,\n          isFetching: false\n        });\n      } catch (e) {\n        console.log(e);\n        setData({\n          users: data.users,\n          isFetching: false\n        });\n      }\n    };\n\n    fetchUsers();\n    setInterval(() => fetchUsers(), 5000);\n  }, []);\n\n  async function callAPI() {\n    const res = await fetch(\"http://localhost:3002/users\").then(res => res.json());\n    return res;\n  }\n\n  return /*#__PURE__*/React.createElement(SimpleUserTable, {\n    users: data.users,\n    isFetching: data.isFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default OnlinePlayersHooks;","map":{"version":3,"sources":["/Users/nklsstlr/work/github/codenames/client/src/components/OnlinePlayersHooks/OnlinePlayersHooks.js"],"names":["React","useState","useEffect","SimpleUserTable","io","socket","OnlinePlayersHooks","data","setData","users","isFetching","emit","error","alert","on","console","log","fetchUsers","result","callAPI","response","e","setInterval","res","fetch","then","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,UAAU,EAAE;AAAzB,GAAD,CAAhC;AACAL,EAAAA,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAX;AACAC,EAAAA,MAAM,CAACM,IAAP,CAAY,MAAZ,EAAoB,QAApB,EAA+BC,KAAD,IAAW;AACvC,QAAIA,KAAJ,EAAW;AACTC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,GAJD;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACS,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEL,MAAAA;AAAF,KAAD,KAAe;AACnCM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeP,KAA3B;AACAD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAG,YAAY;AAC7B,UAAI;AACFT,QAAAA,OAAO,CAAC;AAAEC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAAd;AAAqBC,UAAAA,UAAU,EAAE;AAAjC,SAAD,CAAP;AACA,cAAMQ,MAAM,GAAG,MAAMC,OAAO,EAA5B;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAV,QAAAA,OAAO,CAAC;AAAEC,UAAAA,KAAK,EAAES,MAAM,CAACE,QAAhB;AAA0BV,UAAAA,UAAU,EAAE;AAAtC,SAAD,CAAP;AACD,OALD,CAKE,OAAOW,CAAP,EAAU;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACAb,QAAAA,OAAO,CAAC;AAAEC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAAd;AAAqBC,UAAAA,UAAU,EAAE;AAAjC,SAAD,CAAP;AACD;AACF,KAVD;;AAWAO,IAAAA,UAAU;AACVK,IAAAA,WAAW,CAAC,MAAML,UAAU,EAAjB,EAAqB,IAArB,CAAX;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,iBAAeE,OAAf,GAAyB;AACvB,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA2CF,GAAD,IAC1DA,GAAG,CAACG,IAAJ,EADgB,CAAlB;AAGA,WAAOH,GAAP;AACD;;AAED,sBAAO,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEhB,IAAI,CAACE,KAA7B;AAAoC,IAAA,UAAU,EAAEF,IAAI,CAACG,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxCD;;AA0CA,eAAeJ,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SimpleUserTable from \"../OnlinePlayersHoC/SimpleOnlinePlayerList\";\nimport io from \"socket.io-client\";\n\nlet socket;\nconst OnlinePlayersHooks = () => {\n  const [data, setData] = useState({ users: [], isFetching: false });\n  socket = io(\"http://localhost:3002\");\n  socket.emit(\"join\", \"Niklas\", (error) => {\n    if (error) {\n      alert(error);\n    }\n  });\n\n  useEffect(() => {\n    socket.on(\"roomData\", ({ users }) => {\n      console.log(\"socketio: \" + users);\n      setData(users);\n    });\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setData({ users: data.users, isFetching: true });\n        const result = await callAPI();\n        console.log(result);\n        setData({ users: result.response, isFetching: false });\n      } catch (e) {\n        console.log(e);\n        setData({ users: data.users, isFetching: false });\n      }\n    };\n    fetchUsers();\n    setInterval(() => fetchUsers(), 5000);\n  }, []);\n\n  async function callAPI() {\n    const res = await fetch(\"http://localhost:3002/users\").then((res) =>\n      res.json()\n    );\n    return res;\n  }\n\n  return <SimpleUserTable users={data.users} isFetching={data.isFetching} />;\n};\n\nexport default OnlinePlayersHooks;\n"]},"metadata":{},"sourceType":"module"}