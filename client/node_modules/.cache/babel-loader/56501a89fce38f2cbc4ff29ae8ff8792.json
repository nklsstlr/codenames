{"ast":null,"code":"var _jsxFileName = \"/Users/nklsstlr/work/github/codenames/client/src/components/OnlinePlayersHooks/OnlinePlayersHooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SimpleUserTable from \"../OnlinePlayersHoC/SimpleOnlinePlayerList\";\nimport io from \"socket.io-client\";\nimport queryString from \"query-string\";\nlet socket;\n\nconst OnlinePlayersHooks = ({\n  location\n}) => {\n  console.log(location);\n  const ENDPOINT = \"http://localhost:3002\";\n  const [data, setData] = useState({\n    users: [],\n    isFetching: false\n  });\n  useEffect(() => {\n    const {\n      name\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      console.log(\"socketio: \" + users);\n      setData(users);\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setData({\n          users: data.users,\n          isFetching: true\n        });\n        const result = await callAPI();\n        console.log(result);\n        setData({\n          users: result.response,\n          isFetching: false\n        });\n      } catch (e) {\n        console.log(e);\n        setData({\n          users: data.users,\n          isFetching: false\n        });\n      }\n    };\n\n    fetchUsers();\n    setInterval(() => fetchUsers(), 5000);\n  }, []);\n\n  async function callAPI() {\n    const res = await fetch(\"http://localhost:3002/users\").then(res => res.json());\n    return res;\n  }\n\n  return /*#__PURE__*/React.createElement(SimpleUserTable, {\n    users: data.users,\n    isFetching: data.isFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default OnlinePlayersHooks;","map":{"version":3,"sources":["/Users/nklsstlr/work/github/codenames/client/src/components/OnlinePlayersHooks/OnlinePlayersHooks.js"],"names":["React","useState","useEffect","SimpleUserTable","io","queryString","socket","OnlinePlayersHooks","location","console","log","ENDPOINT","data","setData","users","isFetching","name","parse","search","emit","error","alert","on","fetchUsers","result","callAPI","response","e","setInterval","res","fetch","then","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAIC,MAAJ;;AACA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,QAAQ,GAAG,uBAAjB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,UAAU,EAAE;AAAzB,GAAD,CAAhC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEc,MAAAA;AAAF,QAAWX,WAAW,CAACY,KAAZ,CAAkBT,QAAQ,CAACU,MAA3B,CAAjB;AACAZ,IAAAA,MAAM,GAAGF,EAAE,CAACO,QAAD,CAAX;AACAL,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAoB;AAAEH,MAAAA;AAAF,KAApB,EAA+BI,KAAD,IAAW;AACvC,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAMAd,IAAAA,MAAM,CAACgB,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAER,MAAAA;AAAF,KAAD,KAAe;AACnCL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeI,KAA3B;AACAD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACD,KAHD;AAID,GAbQ,EAaN,CAACH,QAAD,EAAWH,QAAQ,CAACU,MAApB,CAbM,CAAT;AAeAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,UAAU,GAAG,YAAY;AAC7B,UAAI;AACFV,QAAAA,OAAO,CAAC;AAAEC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAAd;AAAqBC,UAAAA,UAAU,EAAE;AAAjC,SAAD,CAAP;AACA,cAAMS,MAAM,GAAG,MAAMC,OAAO,EAA5B;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ;AACAX,QAAAA,OAAO,CAAC;AAAEC,UAAAA,KAAK,EAAEU,MAAM,CAACE,QAAhB;AAA0BX,UAAAA,UAAU,EAAE;AAAtC,SAAD,CAAP;AACD,OALD,CAKE,OAAOY,CAAP,EAAU;AACVlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,CAAZ;AACAd,QAAAA,OAAO,CAAC;AAAEC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAAd;AAAqBC,UAAAA,UAAU,EAAE;AAAjC,SAAD,CAAP;AACD;AACF,KAVD;;AAWAQ,IAAAA,UAAU;AACVK,IAAAA,WAAW,CAAC,MAAML,UAAU,EAAjB,EAAqB,IAArB,CAAX;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,iBAAeE,OAAf,GAAyB;AACvB,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA2CF,GAAD,IAC1DA,GAAG,CAACG,IAAJ,EADgB,CAAlB;AAGA,WAAOH,GAAP;AACD;;AAED,sBAAO,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEjB,IAAI,CAACE,KAA7B;AAAoC,IAAA,UAAU,EAAEF,IAAI,CAACG,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA7CD;;AA+CA,eAAeR,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SimpleUserTable from \"../OnlinePlayersHoC/SimpleOnlinePlayerList\";\nimport io from \"socket.io-client\";\nimport queryString from \"query-string\";\n\nlet socket;\nconst OnlinePlayersHooks = ({ location }) => {\n  console.log(location);\n  const ENDPOINT = \"http://localhost:3002\";\n\n  const [data, setData] = useState({ users: [], isFetching: false });\n\n  useEffect(() => {\n    const { name } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      console.log(\"socketio: \" + users);\n      setData(users);\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setData({ users: data.users, isFetching: true });\n        const result = await callAPI();\n        console.log(result);\n        setData({ users: result.response, isFetching: false });\n      } catch (e) {\n        console.log(e);\n        setData({ users: data.users, isFetching: false });\n      }\n    };\n    fetchUsers();\n    setInterval(() => fetchUsers(), 5000);\n  }, []);\n\n  async function callAPI() {\n    const res = await fetch(\"http://localhost:3002/users\").then((res) =>\n      res.json()\n    );\n    return res;\n  }\n\n  return <SimpleUserTable users={data.users} isFetching={data.isFetching} />;\n};\n\nexport default OnlinePlayersHooks;\n"]},"metadata":{},"sourceType":"module"}